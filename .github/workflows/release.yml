name: Release

on:
  release:
    types: [published]

jobs:
  release-ubuntu:
    name: Ubuntu release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout tags
      uses: openttd/actions/checkout@v1
      with:
        with-tags: true

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine

    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.2.2-manylinux2014_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38'
        build-requirements: '-e .'  # pip args





  release-windows:
    name: Windows release
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout tags
      uses: openttd/actions/checkout@v1
      with:
        with-tags: true

    - uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pyinstaller
        pip install -e .



    - name: Build standalone executable
      run: |
        pyinstaller nmlc.spec
        $version = python setup.py --version
        $archive = echo "nml-standalone-$version-win64.zip"
        Compress-Archive -Path dist/nmlc.exe, LICENSE, README.md, docs/changelog.txt -DestinationPath $archive
        echo "::set-output name=archive::$archive"
      id: nml_archive

    - name: Publish standalone executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ steps.nml_archive.outputs.archive }}
        asset_name: ${{ steps.nml_archive.outputs.archive }}
        asset_content_type: application/zip
